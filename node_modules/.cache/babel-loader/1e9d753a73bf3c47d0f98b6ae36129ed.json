{"ast":null,"code":"var _jsxFileName = \"/Users/abishekk/Documents/react-material-dashboard/src/layouts/Main/components/Topbar/Topbar.js\";\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none',\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const {\n    className,\n    onSidebarOpen,\n    onSidebarClose,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  return /*#__PURE__*/React.createElement(AppBar, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: onSidebarOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(RouterLink, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Logo\",\n    src: \"/images/logos/logo--white.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexGrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: notifications.length,\n    color: \"primary\",\n    variant: \"dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.signOutButton,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func,\n  onSidebarClose: PropTypes.func\n};\nexport default Topbar;","map":{"version":3,"sources":["/Users/abishekk/Documents/react-material-dashboard/src/layouts/Main/components/Topbar/Topbar.js"],"names":["React","useState","Link","RouterLink","clsx","PropTypes","makeStyles","AppBar","Toolbar","Badge","Hidden","IconButton","MenuIcon","NotificationsIcon","InputIcon","useStyles","theme","root","boxShadow","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","drawerWidth","width","enteringScreen","flexGrow","signOutButton","spacing","Topbar","props","className","onSidebarOpen","onSidebarClose","rest","classes","notifications","length","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none',\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, onSidebarClose, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          onClick={onSidebarOpen}\n        >\n          <MenuIcon />\n        </IconButton>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logos/logo--white.svg\"\n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        <IconButton color=\"inherit\">\n          <Badge\n            badgeContent={notifications.length}\n            color=\"primary\"\n            variant=\"dot\"\n          >\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton\n          className={classes.signOutButton}\n          color=\"inherit\"\n        >\n          <InputIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func,\n  onSidebarClose: PropTypes.func\n};\n\nexport default Topbar;\n"]},"metadata":{},"sourceType":"module"}