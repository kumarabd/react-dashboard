{"ast":null,"code":"var _jsxFileName = \"/Users/abishekk/Documents/react-material-dashboard/src/views/ProductList/components/ProductCard/ProductCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, CardActions, Typography, Grid, Divider } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    height: 64,\n    width: 64,\n    margin: '0 auto',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const {\n    className,\n    product,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Product\",\n    className: classes.image,\n    src: product.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    gutterBottom: true,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, product.title), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, product.description)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccessTimeIcon, {\n    className: classes.statsIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    display: \"inline\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Updated 2hr ago\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.statsItem,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GetAppIcon, {\n    className: classes.statsIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    display: \"inline\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, product.totalDownloads, \" Downloads\")))));\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\nexport default ProductCard;","map":{"version":3,"sources":["/Users/abishekk/Documents/react-material-dashboard/src/views/ProductList/components/ProductCard/ProductCard.js"],"names":["React","PropTypes","clsx","makeStyles","Card","CardContent","CardActions","Typography","Grid","Divider","AccessTimeIcon","GetAppIcon","useStyles","theme","root","imageContainer","height","width","margin","border","palette","divider","borderRadius","overflow","display","alignItems","justifyContent","image","statsItem","statsIcon","color","icon","marginRight","spacing","ProductCard","props","className","product","rest","classes","imageUrl","title","description","totalDownloads","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    height: 64,\n    width: 64,\n    margin: '0 auto',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const { className, product, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.imageContainer}>\n          <img\n            alt=\"Product\"\n            className={classes.image}\n            src={product.imageUrl}\n          />\n        </div>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body1\"\n        >\n          {product.description}\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <AccessTimeIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              Updated 2hr ago\n            </Typography>\n          </Grid>\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {product.totalDownloads} Downloads\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}