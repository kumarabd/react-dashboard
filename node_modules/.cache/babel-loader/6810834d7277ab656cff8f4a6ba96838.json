{"ast":null,"code":"var _jsxFileName = \"/Users/abishekk/Documents/react-material-dashboard/src/views/Dashboard/components/UsersByDevice/UsersByDevice.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, IconButton, Divider, Typography } from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      data: [63, 15, 22],\n      backgroundColor: [theme.palette.primary.main, theme.palette.error.main, theme.palette.warning.main],\n      borderWidth: 8,\n      borderColor: theme.palette.white,\n      hoverBorderColor: theme.palette.white\n    }],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n  const devices = [{\n    title: 'Desktop',\n    value: '63',\n    icon: /*#__PURE__*/React.createElement(LaptopMacIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.primary.main\n  }, {\n    title: 'Tablet',\n    value: '15',\n    icon: /*#__PURE__*/React.createElement(TabletMacIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.error.main\n  }, {\n    title: 'Mobile',\n    value: '23',\n    icon: /*#__PURE__*/React.createElement(PhoneIphoneIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.warning.main\n  }];\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    })),\n    title: \"Users By Device\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, devices.map(device => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.device,\n    key: device.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.deviceIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, device.icon), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, device.title), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: device.color\n    },\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, device.value, \"%\"))))));\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\nexport default UsersByDevice;","map":{"version":3,"sources":["/Users/abishekk/Documents/react-material-dashboard/src/views/Dashboard/components/UsersByDevice/UsersByDevice.js"],"names":["React","Doughnut","clsx","PropTypes","makeStyles","useTheme","Card","CardHeader","CardContent","IconButton","Divider","Typography","LaptopMacIcon","PhoneIphoneIcon","RefreshIcon","TabletMacIcon","useStyles","theme","root","height","chartContainer","position","stats","marginTop","spacing","display","justifyContent","device","textAlign","padding","deviceIcon","color","palette","icon","UsersByDevice","props","className","rest","classes","data","datasets","backgroundColor","primary","main","error","warning","borderWidth","borderColor","white","hoverBorderColor","labels","options","legend","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","tooltips","enabled","mode","intersect","divider","titleFontColor","text","bodyFontColor","secondary","footerFontColor","devices","title","value","map","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.error.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: '63',\n      icon: <LaptopMacIcon />,\n      color: theme.palette.primary.main\n    },\n    {\n      title: 'Tablet',\n      value: '15',\n      icon: <TabletMacIcon />,\n      color: theme.palette.error.main\n    },\n    {\n      title: 'Mobile',\n      value: '23',\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton size=\"small\">\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Users By Device\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </div>\n        <div className={classes.stats}>\n          {devices.map(device => (\n            <div\n              className={classes.device}\n              key={device.title}\n            >\n              <span className={classes.deviceIcon}>{device.icon}</span>\n              <Typography variant=\"body1\">{device.title}</Typography>\n              <Typography\n                style={{ color: device.color }}\n                variant=\"h2\"\n              >\n                {device.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n"]},"metadata":{},"sourceType":"module"}